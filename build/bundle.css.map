{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import Checkbox from './Checkbox.svelte'\r\n  import File from './File.svelte'\r\n  import Radio from './Radio.svelte'\r\n  import { USER_AGENT, LANGUAGES } from './constants'\r\n  import { hash } from './hash'\r\n  import { searchByQuery, searchByHash } from './api'\r\n\r\n  let userAgent = USER_AGENT\r\n  let languages = LANGUAGES\r\n  let searchByFile = true\r\n  let query = ''\r\n  let files\r\n  let movies = []\r\n\r\n  $: {\r\n    if (searchByFile) {\r\n      query = ''\r\n    } else {\r\n      files = null\r\n    }\r\n  }\r\n\r\n  $: {\r\n    if (files && files.length) {\r\n      byHash(files[0])\r\n    }\r\n  }\r\n\r\n  const sortBy = (prop) => {\r\n    let lastSortedBy = ''\r\n    let ascending = -1\r\n    return () => {\r\n      if (lastSortedBy === prop) {\r\n        ascending = ascending * -1\r\n      }\r\n      lastSortedBy = prop\r\n\r\n      let comparator\r\n      const propType = typeof movies[0][prop]\r\n      if (propType === 'string') {\r\n        comparator = (a, b) => a[prop].localeCompare(b[prop]) * ascending\r\n      } else if (propType === 'number') {\r\n        comparator = (a, b) => (a[prop] - b[prop]) * ascending\r\n      }\r\n\r\n      movies.sort(comparator)\r\n      movies = movies\r\n    }\r\n  }\r\n\r\n  const byQuery = async () => {\r\n    movies = await searchByQuery({ userAgent, languages, query })\r\n  }\r\n  const byHash = () => {\r\n    hash(files[0], (file, hash) => {\r\n      console.log(file, 'h', hash)\r\n      searchByHash({ userAgent, languages, hash, size: file.size }).then(\r\n        (newMovies) => {\r\n          movies = newMovies\r\n        }\r\n      )\r\n    })\r\n  }\r\n</script>\r\n\r\n<div class=\"container\">\r\n  <div class=\"section\">\r\n    <form action=\"javascript:void(0);\" on:submit={byQuery}>\r\n      <div class=\"columns level\">\r\n        <div class=\"column is-2\">\r\n          <label class=\"label\" for=\"userAgent\">User Agent:</label>\r\n        </div>\r\n        <div class=\"column is-10\">\r\n          <input\r\n            class=\"input\"\r\n            type=\"text\"\r\n            name=\"userAgent\"\r\n            bind:value={userAgent} />\r\n        </div>\r\n      </div>\r\n      <div class=\"columns\">\r\n        <div class=\"column is-2\">\r\n          <label class=\"label\" for=\"language\">Languages:</label>\r\n        </div>\r\n        <div class=\"column is-10\">\r\n          {#each LANGUAGES as lng}\r\n            <Checkbox\r\n              disabled={languages.length === 1 && languages.includes(lng)}\r\n              checked={languages.includes(lng)}\r\n              value={lng}\r\n              label={lng.toUpperCase()}\r\n              on:change={(evt) => {\r\n                const { checked, value } = evt.detail\r\n                if (checked) {\r\n                  languages = [...languages, value]\r\n                } else {\r\n                  languages = languages.filter((x) => x !== value)\r\n                }\r\n              }} />\r\n          {/each}\r\n        </div>\r\n      </div>\r\n      <div class=\"columns level\">\r\n        <div class=\"column is-2\">\r\n          <label class=\"label\" for=\"query\">Search by:</label>\r\n        </div>\r\n        <div class=\"column is-10\">\r\n          <Radio bind:group={searchByFile} value={true} label=\"File\" />\r\n          <Radio bind:group={searchByFile} value={false} label=\"Query\" />\r\n        </div>\r\n      </div>\r\n      {#if searchByFile}\r\n        <div class=\"columns level\">\r\n          <div class=\"column is-2\">\r\n            <label class=\"label\" for=\"query\">File:</label>\r\n          </div>\r\n          <div class=\"column is-10\">\r\n            <File accept=\"video/*\" bind:files />\r\n          </div>\r\n        </div>\r\n      {:else}\r\n        <div class=\"columns level\">\r\n          <div class=\"column is-2\">\r\n            <label class=\"label\" for=\"query\">Query:</label>\r\n          </div>\r\n          <div class=\"column is-8\">\r\n            <input class=\"input\" type=\"text\" name=\"query\" bind:value={query} />\r\n          </div>\r\n          <div class=\"column is-2\">\r\n            <button\r\n              class=\"button is-fullwidth is-primary\"\r\n              type=\"submit\"\r\n              disabled={!query.length}>Search</button>\r\n          </div>\r\n        </div>\r\n      {/if}\r\n    </form>\r\n  </div>\r\n  {#if movies.length}\r\n    <div class=\"section\">\r\n      <table class=\"table is-narrow is-fullwidth is-hoverable\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th class=\"is-clickable\" on:click={sortBy('added')}>Added</th>\r\n            <th class=\"is-clickable\" on:click={sortBy('downloadCount')}>\r\n              Downloaded\r\n            </th>\r\n            <th>Name</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {#each movies as movie, idx}\r\n            <tr>\r\n              <td>{idx + 1}</td>\r\n              <td>{movie.added}</td>\r\n              <td>{movie.downloadCount}</td>\r\n              <td>{movie.name}</td>\r\n              <td><a class=\"button\" href={movie.downloadUrl}>Download</a></td>\r\n            </tr>\r\n          {/each}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  {/if}\r\n</div>\r\n\r\n<style>\r\n  .table th {\r\n    text-align: center;\r\n  }\r\n  .table td {\r\n    vertical-align: middle;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA0KE,qBAAM,CAAC,EAAE,eAAC,CAAC,AACT,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,qBAAM,CAAC,EAAE,eAAC,CAAC,AACT,cAAc,CAAE,MAAM,AACxB,CAAC"
}